using System;
					
public class Program
{
	bool[] prisonerLight = new bool[50000];
	
	int numDays(int numPrisoners, ref int badcount)
	{
		Random rnd = new Random();
		int days=0;//Number of days taken
		bool light = false;//Current state of light
		int chosen = 0;//Prisoner who was chosen today
		int count = 1;//Number of prisoners counted (start with N=1 for the reporter)
		
		initializePrisoners(numPrisoners);
				
		while(count<numPrisoners)
		{
			while(light==false)
			{
				chosen = rnd.Next(0,numPrisoners);
				if(prisonerLight[chosen]==false)//if chosen has never turned the light on before
				{
					light = true;
					prisonerLight[chosen] = true;//turn it on and remember
				}
				else //this day was a waste
				{
					days++;
					if(chosen==0)
						badcount++;//if the reporter walks in the room and the light is off
				}
			}
			do
			{
				if(chosen==0) //the chosen walked in and saw the light was on. yay!
				{
					count++;
					light = false;
				}
				else
				{
					days++; //a random prisoner walked in and saw the light was on
					chosen = rnd.Next(0,numPrisoners);
				}
			}while(light==true);
		}
		return days;
	}
	
	void initializePrisoners(int numPrisoners)
	{
		for (int i=1; i<numPrisoners; i++)
			prisonerLight[i]=false;
		prisonerLight[0]=true; //prisoner#0 is the reporter, doesn't need to report himself
	}
	
	void multipleRuns(int times, int prisoners, ref int badcount)
	{		
		int sum = 0;
		for(int i=0; i<times; i++)
			sum = sum + numDays(prisoners, ref badcount);
		Console.Write("Trial: " + times + " iterations of " + prisoners + " prisoners." + "\r\n");
		Console.Write("The prisoners were in prison for " + sum/times + " days on average." + "\r\n");
		Console.Write("The reporter saw a light switch that was off " + Decimal.Divide(badcount, times) + " times on average.");
	}
		
		
	
	public void Main()
	{
		int badcount = 0;//Total number of times the reporter walked in and saw the light off.
		multipleRuns(8000, 100, ref badcount);
	}
}
